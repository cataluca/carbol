/*** Generated by streamline 0.4.11 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb,__trap=__rt.__trap; (function main(__) { var __this = this; var __frame = { name: "main", line: 1 }; return __func(__, this, arguments, main, 0, __frame, function __$main() {























































































    return (function __1(__) { var ObjectId, Schema, authorSchema, conf, f, model, mongoose, test_add_author, test_get_author, test_remove_author; mongoose = require("mongoose"); conf = require("../conf"); Schema = mongoose.Schema; ObjectId = Schema.ObjectId; model = require("./index"); authorSchema = new Schema({ name: String, surname: String }); authorSchema.virtual("fullname").get(function() { return ((("" + this.name) + " ") + this.surname); }); authorSchema.pre("remove", true, function(next, done) { var Post; console.log("pre-remove", this); Post = require("./post").Post; next(); return model.cascade_delete({ Model: Post, query: { author: this._id }, done: done }); }); exports.Author = mongoose.model("Author", authorSchema); test_add_author = function test_add_author__1(_arg, __) { var post; var __frame = { name: "test_add_author__1", line: 45 }; return __func(__, this, arguments, test_add_author__1, 1, __frame, function __$test_add_author__1() { _arg; mongoose.connect(conf.mongo_uri); post = new exports.Author({ name: "Fabio", surname: "Castaldo" }); return post.save(__cb(__, __frame, 8, 4, function __$test_add_author__1() { console.log(post); return __(null, mongoose.connection.close()); }, true)); }); }; test_get_author = function test_get_author__2(_arg, __) { var author; var __frame = { name: "test_get_author__2", line: 58 }; return __func(__, this, arguments, test_get_author__2, 1, __frame, function __$test_get_author__2() { _arg; mongoose.connect(conf.mongo_uri); return exports.Author.findOne({ _id: "521b4c6ad4241db24f000001" }, __cb(__, __frame, 4, 13, function ___(__0, __1) { author = __1; console.log(author.fullname); return __(null, mongoose.connection.close()); }, true)); }); }; test_remove_author = function test_remove_author__3(_arg, __) { var post; var __frame = { name: "test_remove_author__3", line: 69 }; return __func(__, this, arguments, test_remove_author__3, 1, __frame, function __$test_remove_author__3() { _arg; mongoose.connect(conf.mongo_uri); return exports.Author.findOne({ _id: "5217afe40f65d7ed1d000001" }, __cb(__, __frame, 4, 11, function ___(__0, __1) { post = __1; console.log(post); return post.remove(__cb(__, __frame, 8, 4, function __$test_remove_author__3() { return __(null, mongoose.connection.close()); }, true)); }, true)); }); }; return (function __$__1(__then) { if (!module.parent) { return (function __$__1(__then) { if ((process.argv.length >= 3)) { f = process.argv[2]; f = eval(f); return f({ }, __cb(__, __frame, 78, 6, __then, true)); } else { __then(); } ; })(__then); } else { __then(); } ; })(function __$__1() { __(); }); })(__cb(__, __frame, 88, 0, function __$main() { __(); }, true)); });}).call(this, __trap);